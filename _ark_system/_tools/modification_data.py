# modification_data.py
# Патч для добавления новых процедур в OPERATING_PROCEDURES.md

modifications = [
    {
        "action": "APPEND_TEXT",
        "path": "_ark_system/_core_docs/OPERATING_PROCEDURES.md",
        "content": """
---

## ГЛАВА 10: ПРОЦЕДУРЫ УПРАВЛЕНИЯ ОПЫТОМ

### ПРОЦЕДУРА #PROC-EXP-6: АСИНХРОННОЕ КОД-РЕВЬЮ ("АУДИТОР")
*   **Назначение:** Обеспечить глубокий, объективный и непредвзятый анализ "значимых событий" (ошибок, успехов, инсайтов) для извлечения системных уроков и предотвращения повторения ошибок.
*   **Ключевой Принцип:** Анализ должен проводиться "холодным" экземпляром ИИ ("Аудитором"), который инициализируется полным стратегическим контекстом, но не "зашумлен" тактическим контекстом текущей рабочей сессии.
*   **Процесс:**
    1.  **Инициация:** Напарник инициирует процедуру в рабочей сессии ("Исполнитель") командой `#REVIEW`. "Исполнитель" готовит "Пакет для Ревью" (контекст, лог, рефлексия).
    2.  **Аудит:** Напарник запускает новую сессию, определяя роль ИИ как "Аудитор". Он передает ему "Пакет для Ревью".
    3.  **Диалог-Анализ:** Напарник ведет диалог с "Аудитором" до полного прояснения первопричины.
    4.  **Синтез:** По команде Напарника `#SYNTHESIZE`, "Аудитор" генерирует финальный "вердикт" в формате JSON (согласно `EXPERIENCE_SCHEMA.md`) и соответствующий `modification_data.py` для его интеграции.
    5.  **Интеграция:** Напарник применяет патч, обновляя `ARK_EXPERIENCE_CODEX.json`.

---

## ГЛАВА 11: ПРОЦЕДУРЫ РАБОТЫ С ПРОЕКТАМИ

### ПРОЦЕДУРА #PROC-PROJECT-ONBOARDING: ВВОД ПРОЕКТА В ЭКСПЛУАТАЦИЮ
*   **Назначение:** Гарантировать, что любой существующий проект приводится в полное соответствие со стандартами системы ARK **перед** началом любой работы над ним.
*   **Триггер:** Первая попытка "Исполнителя" начать работу над проектом, который не имеет статуса "Готов к работе" в `ARK_MANIFEST.md`.
*   **Процесс:**
    1.  **Остановка:** "Исполнитель" обязан остановить запрос на работу и инициировать данный протокол.
    2.  **Анализ:** "Исполнитель" запрашивает у Напарника снимок текущей структуры проекта.
    3.  **План Рефакторинга:** "Исполнитель" создает и утверждает с Напарником план по приведению структуры и инструментов проекта в соответствие с `ARK_CODEX.md`.
    4.  **Исполнение:** План выполняется пошагово с помощью системы патчей.
    5.  **Фиксация:** После завершения, статус проекта в `ARK_MANIFEST.md` обновляется на "Готов к работе".

---

## ГЛАВА 12: МЕТА-ПРОЦЕДУРЫ ПРОЕКТИРОВАНИЯ

### МЕТА-ПРИНЦИП #MP-1: ПРИНЦИП ПОЛНОТЫ КОНТЕКСТА
*   **Правило:** Любая сущность (ИИ или инструмент), выполняющая аналитическую или аудиторскую функцию, должна по умолчанию получать полный стратегический контекст (GDD, Roadmap), а не только тактические правила. Контекст можно сужать только по явной, обоснованной директиве Напарника.

"""
    },
    {
        "action": "APPEND_TEXT",
        "path": "_ark_system/_core_docs/OPERATING_PROCEDURES.md",
        "content": """
---

## ГЛАВА 2: ПРОЦЕДУРЫ ИНИЦИАЛИЗАЦИИ И КОНТЕКСТА (Дополнение)

### ПРОЦЕДУРА #PROC-INIT-2: РАСПРЕДЕЛЕНИЕ РОЛЕЙ
*   **Назначение:** Четко определить режим работы ИИ для текущей сессии.
*   **Триггер:** Завершение первичной инициализации (передачи "Пакета Контекста").
*   **Процесс:**
    1.  **Запрос Роли:** Первым действием ИИ после инициализации является запрос на определение роли.
    2.  **Выбор Напарника:** Напарник отвечает одним из ключевых слов: "ИСПОЛНИТЕЛЬ" или "АУДИТОР".
    3.  **Принятие Роли:** ИИ подтверждает принятую роль и переходит в соответствующий режим работы.
"""
    }
]