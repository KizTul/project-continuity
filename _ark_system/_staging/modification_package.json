{
  "version": "1.1",
  "modifications": [
    {
      "action": "MODIFY_FILE",
      "path": "projects/Warden/_src/warden_bot.py",
      "expected_checksum_before": "28989511518f922c50b9c86991248c6938976d8b6fb076ed2f79f965d9da7f20",
      "content": "# -*- coding: utf-8 -*-\n# warden_bot.py - –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ (v2.2 - Async Keep-Alive Fix)\n\nimport discord\nimport os\nimport asyncio\nfrom discord.ext import commands\n\n# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---\ntry:\n    TOKEN = os.environ['DISCORD_BOT_TOKEN']\nexcept KeyError:\n    print(\"!!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –°–µ–∫—Ä–µ—Ç 'DISCORD_BOT_TOKEN' –Ω–µ –Ω–∞–π–¥–µ–Ω.\")\n    exit()\n\n# --- –ù–û–í–´–ô, –ë–ï–ó–û–ü–ê–°–ù–´–ô –ú–ï–•–ê–ù–ò–ó–ú KEEP-ALIVE ---\nasync def keep_alive_async():\n    while True:\n        await asyncio.sleep(300)\n\n# --- –ù–ê–°–¢–†–û–ô–ö–ê –ë–û–¢–ê –ò –ö–û–ì–û–í ---\nintents = discord.Intents.default()\nintents.message_content = True\nintents.reactions = True\nintents.members = True\n\nclass WardenBot(commands.Bot):\n    def __init__(self):\n        super().__init__(command_prefix='!', intents=intents)\n\n    async def setup_hook(self) -> None:\n        cogs_path = 'projects/Warden/_src/cogs'\n        for filename in os.listdir(cogs_path):\n            if filename.endswith('.py') and not filename.startswith('__'):\n                try:\n                    await self.load_extension(f'projects.Warden._src.cogs.{filename[:-3]}')\n                    print(f'–ó–∞–≥—Ä—É–∂–µ–Ω –∫–æ–≥: {filename}')\n                except Exception as e:\n                    print(f'–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–≥–∞ {filename}: {e}')\n        print('------')\n\n    async def on_ready(self):\n        print(f'–ë–æ—Ç {self.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')\n        print('------')\n\nclient = WardenBot()\n\n# --- –ó–ê–ü–£–°–ö –í–°–ï–ì–û ---\nasync def main():\n    async with client:\n        asyncio.create_task(keep_alive_async())\n        await client.start(TOKEN)\n\nif __name__ == \"__main__\":\n    try:\n        asyncio.run(main())\n    except Exception as e:\n        print(f\"!!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}\")\n"
    },
    {
      "action": "MODIFY_FILE",
      "path": "projects/Warden/_src/cogs/moderation.py",
      "expected_checksum_before": "e2623e8fb6116fc48945b41fb32454c78f156c544756647d8ddc3fa3d08cbd81",
      "content": "# moderation.py - –ö–æ–≥ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏\n\nimport discord\nfrom discord.ext import commands\n\nclass ModerationCog(commands.Cog):\n    def __init__(self, client):\n        self.client = client\n\n    @commands.Cog.listener()\n    async def on_message(self, message):\n        if message.author.bot:\n            return\n\n        if message.content.lower().strip() == '–æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç':\n            if message.author.guild_permissions.administrator:\n                try:\n                    target_channel = message.channel\n                    await target_channel.send(f'**–ü—Ä–∏–Ω—è—Ç–æ!** –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∫–∞–Ω–∞–ª–∞ **#{target_channel.name}**.')\n                    deleted = await target_channel.purge(limit=1000, check=lambda m: not m.pinned)\n                    await target_channel.send(f'**–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!** –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: **{len(deleted)}**.', delete_after=20)\n                except discord.Forbidden:\n                    await message.channel.send('**–û—à–∏–±–∫–∞!** –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤–∞ \"–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏\" –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ.')\n                except Exception as e:\n                    await message.channel.send(f'**–û—à–∏–±–∫–∞!** –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—á–∏—Å—Ç–∫—É: {e}')\n            else:\n                await message.channel.send('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.', delete_after=10)\n\nasync def setup(client):\n    await client.add_cog(ModerationCog(client))\n"
    },
    {
      "action": "MODIFY_FILE",
      "path": "projects/Warden/_src/cogs/stats.py",
      "expected_checksum_before": "c5ea4a3bb2ee6825662f48056de6c86f256d738942b7cd9edbf9fcbf0fb0b76f",
      "content": "# stats.py - –ö–æ–≥ –¥–ª—è —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–°–¢–ê–ë–ò–õ–¨–ù–ê–Ø –ó–ê–ì–õ–£–®–ö–ê)\n\nimport discord\nfrom discord.ext import commands, tasks\nimport re\nfrom datetime import datetime\nimport pytz\nimport os\n\n# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---\ntry:\n    REPORT_CHANNEL_ID = int(os.environ['REPORT_CHANNEL_ID'])\n    TIMEZONE = pytz.timezone('Europe/Kiev')\nexcept KeyError as e:\n    print(f\"!!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í –ö–û–ì–ï STATS: –°–µ–∫—Ä–µ—Ç '{e.args[0]}' –Ω–µ –Ω–∞–π–¥–µ–Ω.\")\n\ndaily_stats = {}\n\ndef ensure_user_stats(user_id):\n    if user_id not in daily_stats:\n        daily_stats[user_id] = {\n            'messages': 0, 'images': 0, 'files': 0,\n            'youtube_links': 0, 'other_links': 0, 'reactions_given': 0,\n            'channel_activity': {}\n        }\n\nclass StatsCog(commands.Cog):\n    def __init__(self, client):\n        self.client = client\n        self.generate_daily_report.start()\n\n    def cog_unload(self):\n        self.generate_daily_report.cancel()\n\n    @commands.Cog.listener()\n    async def on_message(self, message):\n        if message.author.bot or message.content.lower().strip() in ['–æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç', '–≥–∞—Ä—Ä–∏, —Ç—ã —Ç—É—Ç?']:\n            return\n        user_id = message.author.id\n        ensure_user_stats(user_id)\n        # (–õ–æ–≥–∏–∫–∞ —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Å—Ç–∞–µ—Ç—Å—è)\n        daily_stats[user_id]['messages'] += 1\n\n    @commands.Cog.listener()\n    async def on_reaction_add(self, reaction, user):\n        if user.bot:\n            return\n        ensure_user_stats(user.id)\n        daily_stats[user_id]['reactions_given'] += 1\n\n    @tasks.loop(minutes=1)\n    async def generate_daily_report(self):\n        now = datetime.now(TIMEZONE)\n        if now.hour == 22 and now.minute == 0:\n            if not hasattr(self.generate_daily_report, \"last_run_date\") or self.generate_daily_report.last_run_date != now.date():\n                report_channel = self.client.get_channel(REPORT_CHANNEL_ID)\n                if report_channel:\n                    await self.send_report_stub(report_channel)\n                    self.generate_daily_report.last_run_date = now.date()\n\n    async def send_report_stub(self, channel):\n        global daily_stats\n        embed = discord.Embed(title=f\"üìä –°—É—Ç–æ—á–Ω—ã–π –æ—Ç—á–µ—Ç {datetime.now(TIMEZONE).strftime('%d.%m.%Y')}\", color=discord.Color.blue())\n        embed.description = \"–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞ —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å—Å—è.\"\n        await channel.send(embed=embed)\n        daily_stats = {}\n\n    @generate_daily_report.before_loop\n    async def before_daily_report(self):\n        await self.client.wait_until_ready()\n\nasync def setup(client):\n    await client.add_cog(StatsCog(client))\n"
    },
    {
      "action": "MODIFY_FILE",
      "path": "projects/Warden/_src/cogs/utils.py",
      "expected_checksum_before": "c94fedfe15e86e63df711c13d5d5d20a7f4e3133d9bc5f8dfc7b0a1a0ac399de",
      "content": "# utils.py - –ö–æ–≥ –¥–ª—è —É—Ç–∏–ª–∏—Ç –∏ –æ–±—â–∏—Ö –∫–æ–º–∞–Ω–¥\n\nimport discord\nfrom discord.ext import commands\n\nclass UtilsCog(commands.Cog):\n    def __init__(self, client):\n        self.client = client\n\n    @commands.Cog.listener()\n    async def on_message(self, message):\n        if message.author.bot:\n            return\n\n        if message.content.lower().strip() == '–≥–∞—Ä—Ä–∏, —Ç—ã —Ç—É—Ç?':\n            if message.author.guild_permissions.administrator:\n                await message.channel.send('–ê–≥–∞! –ë–¥—é ;)')\n\nasync def setup(client):\n    await client.add_cog(UtilsCog(client))\n"
    },
    {
      "action": "CREATE_FILE",
      "path": "projects/Warden/.env.example",
      "content": "# Example environment file for local development\n# Rename this file to .env and fill in your actual values\n\nDISCORD_BOT_TOKEN=–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨\nREPORT_CHANNEL_ID=–í–ê–®_ID_–ö–ê–ù–ê–õ–ê_–ó–î–ï–°–¨\n"
    }
  ]
}