# ДОРОЖНАЯ КАРТА СИСТЕМЫ ARK v5.0

## НАЗНАЧЕНИЕ

Этот документ описывает план развития и улучшения **исключительно фреймворка ARK**.

---
### ЗАВЕРШЕННЫЕ ЭТАПЫ

*   **Этап 1-24:** Развитие до ARK v3.8.
*   **Этап 26:** Унификация Механизма Целостности.

---
### <<< СЛЕДУЮЩИЕ ЭТАПЫ >>>

### Этап 20: Восстановление Надежности Базового Инструментария (Приоритет №0, БЛОКЕР)
*   **Цель:** Устранить критические уязвимости в базовых инструментах, которые делают любую дальнейшую работу ненадежной и рискованной.
*   **Описание Проблемы:** Базовый инструмент `cli.py` искажает или обрезает вывод системных команд, что делает невозможным достоверный анализ файловой системы. ИИ-Исполнитель систематически генерирует неработоспособные команды (контекстная контаминация, EXP-0039).
*   **Ожидаемый Результат:** Полностью надежный базовый инструментарий и системные гарантии качества генерируемых артефактов.
*   [ ] **[ЗАДАЧА 20.1][CRITICAL-BLOCKER]** Провести диагностику инструмента `cli.py`, сравнив его вывод с "эталонным" для выявления причины искажения данных.
*   [ ] **[ЗАДАЧА 20.2][CRITICAL-BLOCKER]** На основе результатов диагностики, произвести ремонт `cli.py`, обеспечив 100% достоверность передачи данных.
*   [ ] **[ЗАДАЧА 20.3][CRITICAL]** Разработать и внедрить обязательный программный модуль "стерилизации" вывода как финальный, не отключаемый фильтр для всех генерируемых команд.

### Этап 34: Ремонт Механизма Копирования в Буфер Обмена (Приоритет №1, БАГ)
*   **Цель:** Восстановить критически важную функцию автоматического копирования "Транзакционной Квитанции" в буфер обмена.
*   **Описание Проблемы:** Инструмент `apply_modifications.py` успешно выполняет транзакции и сохраняет квитанцию в файл, но не копирует ее в буфер обмена, что нарушает основной рабочий цикл и требует от Напарника ручных действий.
*   **Ожидаемый Результат:** Функция автоматического копирования полностью восстановлена. Квитанция надежно попадает в буфер обмена после каждой операции.
*   [ ] **[ЗАДАЧА 34.1][CRITICAL]** Провести диагностику функции `save_receipt_and_copy` в `apply_modifications.py` для выявления причины сбоя (вероятно, связана с библиотекой `pyperclip` или правами доступа к буферу).
*   [ ] **[ЗАДАЧА 34.2]** Реализовать исправление и провести верификационный тест.

### Этап 35: Устранение Технического Долга (Приоритет №2)
*   **Цель:** Повысить качество и долговечность кода инструментария, устранив использование устаревших функций.
*   **Описание Проблемы:** В коде `apply_modifications.py` используются вызовы `datetime.utcnow()`, которые помечены как `DeprecationWarning` и будут удалены в будущих версиях Python. Игнорирование этого предупреждения создает риски для будущей совместимости.
*   **Ожидаемый Результат:** Все вызовы `utcnow()` заменены на современный, timezone-aware аналог `datetime.now(timezone.utc)`.
*   [ ] **[ЗАДАЧА 35.1]** Провести рефакторинг `apply_modifications.py` для замены всех вхождений `datetime.utcnow()`.

<!-- [ARK_INTEGRITY_CHECKSUM::sha256:c316e315510099f552e367e33d2b2722757ba471290f2ee635a2990a07835754] -->

### Этап 32: Внедрение 'Хирургических' Команд в apply_modifications.py (СТРАТЕГИЧЕСКИЙ)
*   **Цель:** Устранить архитектурное ограничение инструментария, добавив команды для безопасной и точной модификации кода без необходимости полной перезаписи файла.
*   **Описание Проблемы:** Текущая команда `MODIFY_FILE` является избыточной и рискованной для задач по добавлению/удалению небольших блоков кода, что приводит к ошибкам.
*   **Ожидаемый Результат:** `apply_modifications.py` расширен новыми, более точными командами, что повышает надежность и эффективность рефакторинга.
*   [ ] **[ЗАДАЧА 32.1]** Реализовать в `apply_modifications.py` команду `INSERT_AFTER_PATTERN` для вставки контента после указанного якоря.
*   [ ] **[ЗАДАЧА 32.2]** Реализовать команду `DELETE_BLOCK_BY_ANCHORS` для безопасного удаления кода между двумя якорями.
*   [ ] **[ЗАДАЧА 32.3]** Внедрить и задокументировать в `ARK_CODEX.md` стандарт для якорей (`# >>> ARK:NAME` и `# <<< ARK:NAME`).

<!-- [ARK_INTEGRITY_CHECKSUM::sha256:7ecee082e173e2fb05eb26f686605cfeccbc477210c17e39ebc64edd7a38b7bb] -->